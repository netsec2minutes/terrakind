name: Owasp zap
on:
 push:
   branches: [ master ]
 pull_request:
   branches: [ master ]

jobs:
  zap:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: OWASP ZAP Baseline Scan
      uses: zaproxy/action-baseline@v0.7.0
      with:
        target: 'http://35.81.32.236:3000/' # Substitua pela URL do seu website
        cmd_options: '-a -J report_json.json'
        fail_action: false

    - name: List files in current directory
      run: ls -la

    - name: pwd
      run: pwd


    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install jsonschema
    - name: Convert ZAP JSON report to SARIF
      run: |
        python ./zap_to_sarif.py # Ajustei o caminho aqui, caso o arquivo esteja na raiz do projeto
        # Ajuste o caminho de acordo com o local do seu arquivo 'zap_to_sarif.py'
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v3
      with:
        name: zap_report.sarif
        path: ./zap_report.sarif # Certifique-se de que esse é o caminho correto para o seu arquivo zap_report.sarif
        retention-days: 5

  import:
    name: Conviso Findings Importation
    needs: zap
    runs-on: ubuntu-20.04
    container:
      image: convisoappsec/flowcli:1.12.0-rc.2
      env:
       FLOW_API_KEY:  ${{secrets.CONVISO_API_KEY}}
       FLOW_PROJECT_CODE: ${{secrets.PROJECT_KEY}}
       FLOW_API_URL: ${{secrets.HOMOLOGA_URL}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download result from previous scan
        uses: actions/download-artifact@v3
        with:
          name: zap_report.sarif
   
      - name: SARIF Importation
        run: |
          conviso findings import-sarif --input-file ./zap_report.sarif # Garanta que esse é o caminho correto para o arquivo zap_report.sarif após ele ter sido baixado
